#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —É—á–µ–Ω–∏–∫–∞
–ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞: python test_student_creation.py
"""

import os
import sys
import django
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'mental.settings')
django.setup()

from mental_app.models import Students, Class, TeacherProfile
from django.contrib.auth.models import User

def test_student_creation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞"""
    print("=== –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —É—á–µ–Ω–∏–∫–∞ ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É—á–∏—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ
        teachers = TeacherProfile.objects.all()
        print(f"–ù–∞–π–¥–µ–Ω–æ —É—á–∏—Ç–µ–ª–µ–π: {teachers.count()}")
        
        if teachers.count() == 0:
            print("‚ùå –ù–µ—Ç —É—á–∏—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ. –°–æ–∑–¥–∞–π—Ç–µ —É—á–∏—Ç–µ–ª—è —Å–Ω–∞—á–∞–ª–∞.")
            return False
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –æ–¥–æ–±—Ä–µ–Ω–Ω–æ–≥–æ —É—á–∏—Ç–µ–ª—è
        teacher = teachers.filter(status='approved').first()
        if not teacher:
            print("‚ùå –ù–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —É—á–∏—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ.")
            return False
        
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —É—á–∏—Ç–µ–ª—è: {teacher.user.username}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–ª–∞—Å—Å—ã —É —É—á–∏—Ç–µ–ª—è
        classes = Class.objects.filter(teacher=teacher)
        print(f"–ù–∞–π–¥–µ–Ω–æ –∫–ª–∞—Å—Å–æ–≤ —É —É—á–∏—Ç–µ–ª—è: {classes.count()}")
        
        if classes.count() == 0:
            print("‚ùå –£ —É—á–∏—Ç–µ–ª—è –Ω–µ—Ç –∫–ª–∞—Å—Å–æ–≤. –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å —Å–Ω–∞—á–∞–ª–∞.")
            return False
        
        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å
        class_obj = classes.first()
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞—Å—Å: {class_obj.name}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
        student_data = {
            'name': '–¢–µ—Å—Ç',
            'surname': '–£—á–µ–Ω–∏–∫',
            'age': 10,
            'parent_first_name': '–¢–µ—Å—Ç',
            'parent_last_name': '–†–æ–¥–∏—Ç–µ–ª—å',
            'parent_phone_number': '+375291234567',
            'student_class': class_obj
        }
        
        print(f"–°–æ–∑–¥–∞–µ–º —É—á–µ–Ω–∏–∫–∞: {student_data}")
        
        # –°–æ–∑–¥–∞–µ–º —É—á–µ–Ω–∏–∫–∞
        student = Students.objects.create(**student_data)
        print(f"‚úÖ –£—á–µ–Ω–∏–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {student}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É—á–µ–Ω–∏–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –≤ –±–∞–∑–µ
        saved_student = Students.objects.get(id=student.id)
        print(f"‚úÖ –£—á–µ–Ω–∏–∫ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ: {saved_student}")
        
        # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
        student.delete()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —É—á–µ–Ω–∏–∫ —É–¥–∞–ª–µ–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

def test_database_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    print("=== –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö ===")
    
    try:
        from django.db import connection
        cursor = connection.cursor()
        cursor.execute("SELECT 1")
        result = cursor.fetchone()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ: {result}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {str(e)}")
        return False

def test_models():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–æ–¥–µ–ª–∏"""
    print("=== –¢–µ—Å—Ç –º–æ–¥–µ–ª–µ–π ===")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å Students
        students_count = Students.objects.count()
        print(f"‚úÖ –ú–æ–¥–µ–ª—å Students —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–µ–Ω–∏–∫–æ–≤: {students_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å Class
        classes_count = Class.objects.count()
        print(f"‚úÖ –ú–æ–¥–µ–ª—å Class —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Å–æ–≤: {classes_count}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–æ–¥–µ–ª—å TeacherProfile
        teachers_count = TeacherProfile.objects.count()
        print(f"‚úÖ –ú–æ–¥–µ–ª—å TeacherProfile —Ä–∞–±–æ—Ç–∞–µ—Ç. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∏—Ç–µ–ª–µ–π: {teachers_count}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–µ–π: {str(e)}")
        return False

if __name__ == "__main__":
    print(f"–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ {datetime.now()}")
    print("=" * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    db_ok = test_database_connection()
    models_ok = test_models()
    
    if db_ok and models_ok:
        student_ok = test_student_creation()
        if student_ok:
            print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("\n‚ö†Ô∏è –¢–µ—Å—Ç—ã –º–æ–¥–µ–ª–µ–π –ø—Ä–æ—à–ª–∏, –Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å")
    else:
        print("\n‚ùå –ë–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏")
    
    print("=" * 50)
